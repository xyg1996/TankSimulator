#!/bin/bash
echo 开始流体计算
unset PATH
unset PYTHONPATH
unset PYTHONHOME
PATH=/opt/skyformai/bin:/usr/local/bin:/usr/bin:/usr/local/sbin
unset LIBRARY_PATH
unset LD_LIBRARY_PATH
unset CPLUS_INCLUDE_PATH
unset PKG_CONFIG_PATH

currentpath=$1

echo $currentpath
cd $currentpath

# jobid=$2
# echo 正尝试重新连接:$jobid

finishtime=$3
starttime=$4

source ~/.bashrc
source /share/simforge_share/open-source/spack/share/spack/setup-env.sh
# spack env activate precice
# spack load precice@2.3.0%gcc@10.2.0
# spack load gcc@10.2.0

# YAML_ROOT=/share/simforge_share/open-source/CalculiX/2.16-calculix-adapter/yaml-cpp-yaml-cpp-0.6.2
# export LD_LIBRARY_PATH=$YAML_ROOT/build:$YAML_ROOT/lib:$LD_LIBRARY_PATH
# export CPLUS_INCLUDE_PATH=$YAML_ROOT/include:$CPLUS_INCLUDE_PATH

# export MPI_ROOT=/share/simforge_share/open-source/spack/opt/spack/linux-centos7-cascadelake/gcc-10.2.0/openmpi-4.1.2-rlo4quziwcyvnoridzvryrx7f445wijp
# export INSTALL_ROOT=/share/simforge_share/open-source/CalculiX/2.16-calculix-adapter/OpenFOAM-6
# export PATH=$MPI_ROOT/bin:$INSTALL_ROOT/platforms/linux64GccDPInt32Opt/bin/:$INSTALL_ROOT/bin:$PATH
# export LD_LIBRARY_PATH=$MPI_ROOT/lib:$INSTALL_ROOT/platforms/linux64GccDPInt32Opt/lib:$LD_LIBRARY_PATH
# source $INSTALL_ROOT/etc/bashrc

# GCCPATH=/home/export/online3/amd_share/gcc5.4
# export PATH=$GCCPATH/gcc-5.4.0/x86Install/bin:${PATH}
# export LD_LIBRARY_PATH=$GCCPATH/gcc-5.4.0/x86Install/lib64:${LD_LIBRARY_PATH}
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GCCPATH/gmp-4.2.4/lib:$GCCPATH/mpc-0.8.2/SWInstall/lib:$GCCPATH/mpfr-2.4.2/SWInstall/lib

# BOOST_ROOT=/home/export/online3/amd_share/precicerequirement/boost169
# export LIBRARY_PATH=$BOOST_ROOT/lib:${LIBRARY_PATH};
# export LD_LIBRARY_PATH=$BOOST_ROOT/lib:${LD_LIBRARY_PATH};
# export CPLUS_INCLUDE_PATH=$BOOST_ROOT/include:${CPLUS_INCLUDE_PATH};

# export LD_LIBRARY_PATH=/home/export/online3/amd_share/precicerequirement/yamlcpp062/lib:${LD_LIBRARY_PATH}
# export CPLUS_INCLUDE_PATH=/home/export/online3/amd_share/precicerequirement/yamlcpp062/include:$CPLUS_INCLUDE_PATH

# export Eigen3_ROOT=/home/export/online3/amd_share/precicerequirement/eigen-eigen-323c052e1731

# export PATH=/home/export/online3/amd_share/precicerequirement/cmake/bin:${PATH};

# PRECICE_ROOT=/home/export/online3/amd_share/precicerequirement/preCICE1.6.1
# export PKG_CONFIG_PATH=$PRECICE_ROOT/lib/pkgconfig
# export LIBRARY_PATH=$PRECICE_ROOT/lib:${LIBRARY_PATH};
# export LD_LIBRARY_PATH=$PRECICE_ROOT/lib:${LD_LIBRARY_PATH};
# export CPLUS_INCLUDE_PATH=$PRECICE_ROOT/include:${CPLUS_INCLUDE_PATH};

#. /home/export/online3/amd_share/OpenFOAM_x86/OpenFOAM-5.0/etc/bashrc
# . /home/export/online3/amd_share/OpenFOAM_x86/OpenFOAM-6.0/etc/bashrc
spack load gcc@5.4.0
spack load precice@1.6.1
export MPI_ROOT=/share/simforge_share/open-source/spack/opt/spack/\
linux-centos7-broadwell/gcc-5.4.0/openmpi-4.1.4-jii5go43xw3lrfzuzqzglqm43lqezq3i
export Openfoam_ROOT=/share/simforge_share/open-source/CalculiX/\
2.15-calculix-adapter-openfoam/OpenFOAM-6
export PATH=$MPI_ROOT/bin:$Openfoam_ROOT/platforms/linux64GccDPInt32Opt/bin:\
$Openfoam_ROOT/bin:$PATH
export LD_LIBRARY_PATH=$MPI_ROOT/lib:$Openfoam_ROOT/platforms/linux64GccDPInt32Opt/lib:\
$Openfoam_ROOT/../ThirdParty-6.0/platforms/linux64GccDPInt32/lib:$LD_LIBRARY_PATH
source $Openfoam_ROOT/etc/bashrc

. $WM_PROJECT_DIR/bin/tools/RunFunctions

# 1 for true, 0 for false
parallel=1
if [ "$1" = "-parallel" ]; then
    parallel=1
fi

# Prepare
if [ $parallel -eq 1 ]; then
    ln -s -f precice-config_parallel.xml precice-config.xml
else
    ln -s -f precice-config_serial.xml precice-config.xml
fi

# Run
cd Fluid
    solver=$(getApplication)
    procs=$(getNumberOfProcessors)
cd ..
echo $solver

# yes | cp -rf Fluid/constant/g_ac Fluid/constant/g
# yes | cp -rf Fluid/system/controlDict_ac Fluid/system/controlDict
# /usr/sw-mpp/bin/bsub -I -q q_x86_share -n $procs $solver -case Fluid -parallel &&

solver=interFoam

ln -s -f precice-config_parallel.xml precice-config.xml

yes | cp -rf Fluid/constant/g_ac Fluid/constant/g
yes | cp -rf Fluid/system/controlDict_ac Fluid/system/controlDict
rm -rf log.$solver
csub -I -q q_x86_sf -n $procs -o log.$solver ompi-mpirun $solver -parallel -case Fluid &&

# if 第一阶段执行成功,并且第二阶段还没执行过:
# echo Fluid/processor0/$starttime
# echo Fluid/processor0/$finishtime
if [[ ! -d Fluid/processor0/$starttime && -d Fluid/processor0/$finishtime ]]; then
    #切换到第二阶段precice-config.xml
    if [ $parallel -eq 1 ]; then
        ln -s -f precice-config_parallel2.xml precice-config.xml
    else
        ln -s -f precice-config_serial2.xml precice-config.xml
    fi

    #修改/切换 Fluid内的配置文件
    yes | cp -rf Fluid/constant/g_sh Fluid/constant/g
    yes | cp -rf Fluid/system/controlDict_sh Fluid/system/controlDict
    #/usr/sw-mpp/bin/bsub -I -q q_x86_share -n $procs $solver -case Fluid -parallel
    rm -rf log.$solver
    csub -I -q q_x86_sf -n $procs -o log.$solver ompi-mpirun $solver -case Fluid -parallel

    echo 结束！
fi

